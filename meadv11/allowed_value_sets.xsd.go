// Code generated by xgen. DO NOT EDIT.

package meadv11

// Activity is Focuses the mind and keeps an individual centered.
type Activity string

// AdditionalContributorRole is An Actor who performs a purely gestural Performance.
type AdditionalContributorRole string

// AdditionalRightsClaimStatus is Accepted.
type AdditionalRightsClaimStatus string

// AdditionalTitleType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type AdditionalTitleType string

// AdditionalVideoType is A Resource that is accessible in the WWW.
type AdditionalVideoType string

// AdministratingRecordCompanyRole is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type AdministratingRecordCompanyRole string

// AffiliationType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type AffiliationType string

// AllIsoTerritoryCode is Zaire, Name changed to Congo, the Democratic Republic of the (CD), (Source ISO 3166-3).
type AllIsoTerritoryCode string

// AllTerritoryCode is Zaire, Name changed to Congo, the Democratic Republic of the (CD), (Source ISO 3166-3).
type AllTerritoryCode string

// AllTerritoryCodeNoWorldwide is Zaire, Name changed to Congo, the Democratic Republic of the (CD), (Source ISO 3166-3).
type AllTerritoryCodeNoWorldwide string

// ArAcknowledgementStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ArAcknowledgementStatus string

// ArActionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ArActionType string

// ArtistRole is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ArtistRole string

// ArtistType is A concert style band featuring brass, woodwind, and percussion Instruments.
type ArtistType string

// AspectRatioType is The ratio of pixel dimensions, i.e. the DisplayAspectRatio divided by the PixelAspectRatio.
type AspectRatioType string

// AsserterType is A Party which is not one of the parties directly involved in a context.
type AsserterType string

// AssertionStatus is A value indicating that the Assertion has been verified.
type AssertionStatus string

// AudioCodecType is Windows Media Audio as developed by Microsoft Corp.
type AudioCodecType string

// AudioVisualType is A Resource that is accessible in the WWW.
type AudioVisualType string

// BasisForRevenueAllocation is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type BasisForRevenueAllocation string

// BinaryDataType is Hexadecimal-encoded binary data.
type BinaryDataType string

// Blockchain is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Blockchain string

// BusinessMusicalWorkContributorRole is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type BusinessMusicalWorkContributorRole string

// CarrierType is A VideoCassette VHS SECAM.
type CarrierType string

// CatalogTransferAcknowledgementStatus is A Status reporting that a File has been downloaded, but not checked for compliance.
type CatalogTransferAcknowledgementStatus string

// CatalogTransferStatus is A State in which a CatalogTransfer is rejected for all Releases.
type CatalogTransferStatus string

// CatalogTransferType is A CatalogTransfer that is a statutory reversion according to US copyright law, i.e. an ownership deal reverts to the OriginalOwner after a number of years.
type CatalogTransferType string

// CdProtectionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CdProtectionType string

// CharacterType is A Character that is not focused on by the storyline. SupportingCharacters may develop a complex back-story of their own, but this is usually in relation to the MainCharacter, rather than entirely independently. This is sometimes referred to a category B character.
type CharacterType string

// ClaimBasis is A claim for an unmatched MusicalWork made directly by the RightsController.
type ClaimBasis string

// ClaimImpact is The impact provided gives a figure for the delta between the amount claimed in this CDM notificationÂ and the amount claimed in the previous CDM notification.
type ClaimImpact string

// ClaimStatus is A RightsClaim for an insufficient amount. This value is to be used when the total of all known collection shares is less than 100%.
type ClaimStatus string

// ClassifiedGenre is A fusion of various western popular music Genres with different global Folk music styles.
type ClassifiedGenre string

// ClipType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ClipType string

// CodingType is A CodingType of a Resource in which data is lost.
type CodingType string

// CollectionMandateType is An Organization that provides intermediary functions relating to the management of Rights.
type CollectionMandateType string

// CommentaryNoteType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CommentaryNoteType string

// CommercialModelType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CommercialModelType string

// CommercialModelTypeERN is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CommercialModelTypeERN string

// CommercialModelTypeMWNL is A CommercialModel where the Service or Product offering is financed by revenue generated from a Customer Subscription.
type CommercialModelTypeMWNL string

// CompilationType is A CompilationType of a Creation which is not a Compilation.
type CompilationType string

// CompositeMusicalWorkType is A MusicalWork whose expression is a combination of existing MusicalWorks or excerpts from MusicalWorks to which typically, additional original material has been added. Example: material may be added to provide musical links joining or combining the existing MusicalWorks. Note: A Potpourri typically results in the creation of a new piece of intellectual property and is sometimes known as Mashup.
type CompositeMusicalWorkType string

// Confidentiality is This information may be shared with third parties.
type Confidentiality string

// ConsumerEngagementAnomalyType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ConsumerEngagementAnomalyType string

// ContainerFormat is Waveform Audio File Format
type ContainerFormat string

// ContainsAI is Part of the content was created using GenerativeAI.
type ContainsAI string

// ContributorClaimStatus is A State in which the status message is sent in reply to a RevokeResourceRightsClaimMessage.
type ContributorClaimStatus string

// ContributorRole is A Party responsible for managing clothes and/or costumes.
type ContributorRole string

// ContributorRoleRDR is A Party responsible for managing clothes and/or costumes.
type ContributorRoleRDR string

// CreationType is A digital Fixation of an expression of an abstract Work (such as a SoundRecording, a Video, an Image, Software, or a passage of Text).
type CreationType string

// CreativeMusicalWorkContributorRole is A Creator of textual material that accompanies audio or audiovisual material.
type CreativeMusicalWorkContributorRole string

// CtProposedActionType is To send a Message with updated data.
type CtProposedActionType string

// CueOrigin is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CueOrigin string

// CueSheetType is A CueSheet that is authorized to be used in place of the actual CueSheet.
type CueSheetType string

// CueUseType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type CueUseType string

// CueUseTypeMWDR is Music which is played or visibly performed in an on-screen Performance, e.g. diegetic music.
type CueUseTypeMWDR string

// CurrencyCode is Zimbabwe Dollar (deprecated).
type CurrencyCode string

// CurrentTerritoryCode is Further Reading: https://kb.ddex.net/implementing-each-standard/best-practices-for-all-ddex-standards/guidance-on-identifiers-and-iso-codes-lists/worldwide
type CurrentTerritoryCode string

// DanceStyle is [missing definition]
type DanceStyle string

// DataCarrierFormat is Transverse Track Quadraplex Video
type DataCarrierFormat string

// DataCarrierType is Zip digital data disk, cassette
type DataCarrierType string

// DdexTerritoryCode is Further Reading: https://kb.ddex.net/implementing-each-standard/best-practices-for-all-ddex-standards/guidance-on-identifiers-and-iso-codes-lists/worldwide
type DdexTerritoryCode string

// DdexTerritoryCodeNoWorldwide is Kosovo (Source: EU).
type DdexTerritoryCodeNoWorldwide string

// DeliveryFileType is A File containing video data and no audio data.
type DeliveryFileType string

// DeprecatedCurrencyCode is Zimbabwe Dollar (deprecated).
type DeprecatedCurrencyCode string

// DeprecatedIsoTerritoryCode is Zaire, Name changed to Congo, the Democratic Republic of the (CD), (Source ISO 3166-3).
type DeprecatedIsoTerritoryCode string

// DeprecatedReleaseType is A Release containing normally one SoundRecording.
type DeprecatedReleaseType string

// DigitizationMode is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type DigitizationMode string

// DiscrepancyType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type DiscrepancyType string

// DisplayArtistRole is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type DisplayArtistRole string

// DisplayArtistRoleRDR is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type DisplayArtistRoleRDR string

// DistributionChannelType is To Deliver a Resource over the Internet using streaming technology.
type DistributionChannelType string

// DistributionClass is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type DistributionClass string

// DocumentTypeLoD is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type DocumentTypeLoD string

// DocumentTypeMWL is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type DocumentTypeMWL string

// DpidStatus is A Status of a DdexPartyId which has been replaced.
type DpidStatus string

// DrmEnforcementType is A DrmEnforcementType of a Creation which is not protected by DRM.
type DrmEnforcementType string

// EditionType is A SoundRecording with non-immersive audio encoding.
type EditionType string

// ElectroOpticalTransferFunctionType is The ElectroOpticalTransferFunction ST 2084 as standardized by SMPTE.
type ElectroOpticalTransferFunctionType string

// ElementConfiguration is Twin Track
type ElementConfiguration string

// ElementDesignation is A RecordingComponent that is intended for use only during the creation of the final SoundRecording.
type ElementDesignation string

// EncodingType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type EncodingType string

// EquipmentManufacturer is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type EquipmentManufacturer string

// EquipmentModel is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type EquipmentModel string

// EquipmentType is A program that enables a Computer to perform a specific task(s).
type EquipmentType string

// ErnMessageType is A Message in the Release Notification Message Suite Standard, containing details of a new Release.
type ErnMessageType string

// ErnTestMessageType is A Message in the Release Notification Message Suite Standard, allowing a ReleaseCreator to 'purge' a Release that a DSP has on its books but that cannot be retracted or be taken down in the normal way (e.g. because its metadata is corrupt).
type ErnTestMessageType string

// ErncFileStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ErncFileStatus string

// ErncProposedActionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ErncProposedActionType string

// ErrorSeverity is An Error which generates a warning message.
type ErrorSeverity string

// ErrorType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ErrorType string

// EventType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type EventType string

// ExceptionReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ExceptionReason string

// ExpressionType is An ExpressionType according to which the expression is instructive.
type ExpressionType string

// ExternallyLinkedResourceType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ExternallyLinkedResourceType string

// FileType is A Extended Zip File (ZIPX).
type FileType string

// FingerprintAlgorithmType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type FingerprintAlgorithmType string

// Form is Triple time dance that originated among German-speaking peasants. In the 19th century, it was the most popular ballroom dance in Europe.
type Form string

// FrameRate is A frame rate of 30 fps.
type FrameRate string

// Gender is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type Gender string

// GenderPIE is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type GenderPIE string

// GoverningAgreementType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type GoverningAgreementType string

// HashSumAlgorithmType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type HashSumAlgorithmType string

// HdrVideoDynamicMetadataType is A HdrVideoDynamicMetadataType where Dolby Vision XML is provided as stand-alone file.
type HdrVideoDynamicMetadataType string

// HdrVideoStaticMetadataType is Maximum Frame Average Light Level - indicates the maximum value of the frame average light level (in nits) of the associated HDR video as defined in CEA Standard, HDR Static Metadata Extensions, CEA-861.3, January 2015.
type HdrVideoStaticMetadataType string

// ImageCodecType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ImageCodecType string

// ImageType is An Image intended as background on a portable device such as a mobile phone or computer.
type ImageType string

// InstrumentManufacturer is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type InstrumentManufacturer string

// InstrumentModel is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type InstrumentModel string

// InstrumentType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type InstrumentType string

// Intensity is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Intensity string

// Iso31661TerritoryCode is Zimbabwe (Source:ISO 3166-1).
type Iso31661TerritoryCode string

// Iso639Part12LanguageCode is Zaza; Dimili; Dimli; Kirdki; Kirmanjki; Zazaki
type Iso639Part12LanguageCode string

// Iso639Part3LanguageCode is Yue Chinese
type Iso639Part3LanguageCode string

// IsoCurrencyCode is Zimbabwe Gold.
type IsoCurrencyCode string

// IsoLanguageCode is Yue Chinese
type IsoLanguageCode string

// IsoTerritoryCode is Zimbabwe (Source:ISO 3166-1).
type IsoTerritoryCode string

// IswcStatus is An ISWC which is provisional.
type IswcStatus string

// LabelNameType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type LabelNameType string

// LabelType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type LabelType string

// LanguageLocalizationType is An audio-visual Resource that has not been localised.
type LanguageLocalizationType string

// LicenseRecord is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type LicenseRecord string

// LicenseRefusalReason is A Work is in the public domain in a requested Territory.
type LicenseRefusalReason string

// LicenseRejectionReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type LicenseRejectionReason string

// LinkAcknowledgementStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type LinkAcknowledgementStatus string

// LinkDescription is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type LinkDescription string

// LyricsType is A group of lines in the Lyrics that form a unit.
type LyricsType string

// MeasurementType is The Measurement should be made on the video.
type MeasurementType string

// MembershipType is A Party which has assigned relevant Rights to a claiming society for the world.
type MembershipType string

// MessageActionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MessageActionType string

// MessageControlType is A Message containing data which is expected to be used for testing purposes.
type MessageControlType string

// MessagePurpose is A value to indicate that the LicenseMessage is sent as an Acknowledgement for the use of a License that is already in place, e.g. in the case of statutory licences or licenses granted by the artist in a controlled composition clause.
type MessagePurpose string

// MessageType is A Message in the Musical Works Notification and Licensing Message Suite Standard, recalling a mc-notif:MusicalWorkClaimRequestMessage.
type MessageType string

// MetadataSourceType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MetadataSourceType string

// MissingLinkReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MissingLinkReason string

// Mode is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Mode string

// Mood is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Mood string

// MoodOrThemeType is A MusicalManifestation consisting of the music of a MusicalWork.
type MoodOrThemeType string

// MusicalWorkContributorRole is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MusicalWorkContributorRole string

// MusicalWorkType is A Work specifically created for use in a video production. Examples: self-help videos, educational videos, ...
type MusicalWorkType string

// MwnlFileStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MwnlFileStatus string

// MwnlProposedActionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type MwnlProposedActionType string

// NewStudioRole is A Party responsible for managing clothes and/or costumes.
type NewStudioRole string

// NftConfirmationStatus is A State in which a music NFT has not been approved.
type NftConfirmationStatus string

// OperatingSystemType is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type OperatingSystemType string

// OriginalPurpose is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type OriginalPurpose string

// PLineType is A (P) RightsNotice for a remastered Creation.
type PLineType string

// ParentalWarningStandard is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ParentalWarningStandard string

// ParentalWarningType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ParentalWarningType string

// PartyNameFormat is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PartyNameFormat string

// PartyNamePurpose is An Annotation which acknowledges writers.
type PartyNamePurpose string

// PartyNameType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PartyNameType string

// PartyRelationshipType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PartyRelationshipType string

// PartyRelationshipTypePIE is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PartyRelationshipTypePIE string

// PartyRole is A Party that translates Lyrics and/or Text from one Language into another. This is also known as sub-Lyricist.
type PartyRole string

// PartyType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PartyType string

// PendingReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PendingReason string

// PercentageType is A Percentage of a statutory RoyaltyRate.
type PercentageType string

// Period is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Period string

// PhysicalCarrierType is A vinyl disk.
type PhysicalCarrierType string

// PriceInformationType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type PriceInformationType string

// PrimaryColorType is A specification defining various aspects of ultra-high-definition television (UHDTV) with standard dynamic range (SDR) and wide color gamut (WCG).
type PrimaryColorType string

// ProductType is A Product that is predominantly comprised of Videos.
type ProductType string

// ProfileId is A Composite containing details of a list of Resources, potentially with information about the underlying MusicalWork(s) without any sales or usage figures. This is a Single-Record Block Variant of the profile.
type ProfileId string

// ProfileIdCDM is The Claims Corrections profile defined in Part 6.
type ProfileIdCDM string

// ProfileIdMWDR is A right share notification as per the profile defined in Cl. 8.1 of Part 2 of the MWN standard.
type ProfileIdMWDR string

// ProfileType is A MessageProfile for a Message that can be updated.
type ProfileType string

// Purpose is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type Purpose string

// RatingAgency is The Valtion elokuvatarkastamo of Finnland.
type RatingAgency string

// RatingReason is Violence.
type RatingReason string

// RdrMessageType is A Message in the Recording Data and Rights Revenue Reporting Standard for declaring revenues.
type RdrMessageType string

// RdrcBatchStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RdrcBatchStatus string

// RdrcFileStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RdrcFileStatus string

// ReasonForNameChange is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ReasonForNameChange string

// RecipientRevenueType is A Revenue of a producer.
type RecipientRevenueType string

// RecipientRevenueTypeRDR is A Revenue of a Performer and producer.
type RecipientRevenueTypeRDR string

// RecordingFormat is A Resource that is accessible in the WWW.
type RecordingFormat string

// RecordingMode is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type RecordingMode string

// ReferenceCreation is The percentage is the percentage of the UserGeneratedContent that contains the reference Resource.
type ReferenceCreation string

// ReferenceUnit is A ReferenceUnit of a Quantity that refers to a usage.
type ReferenceUnit string

// RegistrationStatus is A State in which the registration of a Resource has been rejected due to errors.
type RegistrationStatus string

// RejectionReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RejectionReason string

// RelatedResourceType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RelatedResourceType string

// RelationalRelator is The Relator between an Entity and another to which it is not equivalent.
type RelationalRelator string

// ReleaseProfileVariantVersionId is A ReleaseProfile for ClassicalAlbum Releases.
type ReleaseProfileVariantVersionId string

// ReleaseProfileVersionId is A ReleaseProfile for VideoReleases.
type ReleaseProfileVersionId string

// ReleaseRelationshipType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ReleaseRelationshipType string

// ReleaseResourceType is A Resource that is not a main Resource of a Release. It supports the PrimaryResources (examples are lyrics, cover art etc). In accordance with the GRid standard, a change in a PrimaryResource mandates a new GRid wheras a change in a SecondaryResource does not mandate a new GRid.
type ReleaseResourceType string

// ReleaseType is A Release containing normally one SoundRecording.
type ReleaseType string

// ReleaseTypeDSR is A Release containing a Resource for use as a Wallpaper.
type ReleaseTypeDSR string

// ReleaseTypeERN4 is A Release containing a Resource for use as a Wallpaper.
type ReleaseTypeERN4 string

// ReleaseTypeMCNOTIF is A Release with a short total Duration, typically containing one or two ShortFormVideos.
type ReleaseTypeMCNOTIF string

// ReportMessageType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ReportMessageType string

// RequestMessagePurpose is A value to indicate that the LicenseRequestMessage is sent to inform a (part) owner of a MusicalWork that the MessageSender plans to utilise the MusicalWork. This value applies if a License is already in place, e.g. in the case of statutory licences or licenses granted by the artist in a controlled composition clause.
type RequestMessagePurpose string

// RequestReason is An Event in which a writer is deleted.
type RequestReason string

// ResourceContributorRole is A Party responsible for managing clothes and/or costumes.
type ResourceContributorRole string

// ResourceGroupType is A ResourceGroupType indicating that a Release is made up of several Sides. This may only be used when communicating data for physical products.
type ResourceGroupType string

// ResourceRelationshipType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ResourceRelationshipType string

// ResourceType is An audio-visual Recording.
type ResourceType string

// ResourceTypeCustomSet is An audio Recording.
type ResourceTypeCustomSet string

// ResourceTypeMCNOTIF is An audio-visual Recording.
type ResourceTypeMCNOTIF string

// ResourceTypeRDR is An audio-visual Recording.
type ResourceTypeRDR string

// ResourceWorkRelationshipType is A Resource based on a single Work.
type ResourceWorkRelationshipType string

// ResponseType is The response updates a claim made previously.
type ResponseType string

// RevenueAllocationType is A Set of Resources (Episodes) designed to be made available sequentially.
type RevenueAllocationType string

// RevenueSourceType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RevenueSourceType string

// RevocationReason is A Work is in the public domain in a requested Territory.
type RevocationReason string

// RhythmStyle is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RhythmStyle string

// RightShareType is The proportion of the overall MusicalWork that a writer has assigned to an OriginalPublisher. Note that each writer can have zero, one or many OriginalPublishers, and hence zero, one or many OriginalPublisherShares. An OriginalPublisherShare does not define a share for the collection of money. They are also referred to as Stakeholder Shares or Primary Publishers Shares.
type RightShareType string

// RightShareTypeMWDR is The proportion of the overall MusicalWork that a writer has assigned to an OriginalPublisher. Note that each writer can have zero, one or many OriginalPublishers, and hence zero, one or many OriginalPublisherShares. An OriginalPublisherShare does not define a share for the collection of money. They are also referred to as Stakeholder Shares or Primary Publishers Shares.
type RightShareTypeMWDR string

// RightsClaimPolicyReason is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RightsClaimPolicyReason string

// RightsClaimPolicyType is A Policy where the recipient of the Message shall report any use of a Release or Resource that meets the condition to the relevant RightsHolder(s).
type RightsClaimPolicyType string

// RightsClaimStatus is A State in which the status message is sent in reply to a RevokeResourceRightsClaimMessage.
type RightsClaimStatus string

// RightsControlType is A RightsController who owns and/or controls the Rights in a Creation subsequent to a previous RightsController whether by assignment, inheritance or other transfer of those Rights. The SuccessorInTitle may be a human being or other legal person or corporate entity.
type RightsControlType string

// RightsControllerRole is A Type of an Entity used when a sender of a DdexMessage wishes to indicate that the value within the allowed value set is unknown.
type RightsControllerRole string

// RightsControllerType is The single and only Licensee that is granted a License in respect of some or all Rights in one or more Creations for specific territories, RightsTypes, UsageTypes and CommercialModelTypes (which may be anything up to and including all Rights for the world, for all types of Usage and for all types of CommercialModels), by a Licensor.
type RightsControllerType string

// RightsCoverage is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RightsCoverage string

// RightsCoverageMWDR is The Right to include and combine a Work either completely or in parts in timed relation with Works of other types for the making of an audio-visual or multimedia Creation or a database.
type RightsCoverageMWDR string

// RightsStatementProfile is The message contains a RightsStatement with the rights controlled by the RightsController.
type RightsStatementProfile string

// RinFileStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RinFileStatus string

// RinMessageType is A Message in the DDEX Recording Information Notification standard, containing information about one or more RecordingComponents or Recordings as well as related entities such as Projects, Parties, Sessions and MusicalWorks. The RecordingComponents or Recordings described in a RecordingInformationNotification belong, typically, to the same Project.
type RinMessageType string

// RinProposedActionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RinProposedActionType string

// RootChordNote is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RootChordNote string

// RootChordQuality is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type RootChordQuality string

// RoyaltyRateCalculationType is A Price at which a Product is offered to Consumers.
type RoyaltyRateCalculationType string

// RoyaltyRateType is A percentage or value Rate at which royalties are due, representing the percentage of some Amount (e.g., RetailPrice) payable in royalties.
type RoyaltyRateType string

// SessionType is A Session focusing on Vocal Performances.
type SessionType string

// SheetMusicCodecType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SheetMusicCodecType string

// SheetMusicType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SheetMusicType string

// SoftwareType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SoftwareType string

// SoundRecordingType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SoundRecordingType string

// SpecialContributorType is Music performed by a set of two or more Artists who may be individually credited but whose name is not listed as a DisplayArtist.
type SpecialContributorType string

// Status is A value indicating that the Status is 'verified'.
type Status string

// SubGenre is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SubGenre string

// SubTitleType is A SubTitle that allows differentiating different versions of the same Resource in accordance with the ISRC standard. This value is only to be used if no other SubTitleType value is applicable.
type SubTitleType string

// SummaryType is A Party that controls rights in one or more Creations in respect of some or all rights for specific territories, time periods, RightsTypes, UsageTypes and CommercialModelTypes (which may be anything up to and including all rights for the world, in perpetuity, for all types of Usage and for all types of CommercialModels). Creations include MusicalWorks, SoundRecordings and other Resources as well as Releases. The RightsController is in many cases is indeed also the Licensor. The RightsController may be a human being or other legal person or corporate entity. The RightsController may or may not also be the RightsAdministrator, the LicensingAgent or the RightsHolder. The RightsController may or may not be the MessageSender or MessageRecipient of a message in a specific information exchange defined by a DDEX Standard.
type SummaryType string

// SupplyChainStatus is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type SupplyChainStatus string

// Tempo is A very fast and lively Tempo (172â176Â bpm).
type Tempo string

// TerritoryCode is Zimbabwe (Source:ISO 3166-1).
type TerritoryCode string

// TerritoryCodeType is A StandardIdentifier according to CISAC's Territory Information System.
type TerritoryCodeType string

// TerritoryCodeTypeIncludingDeprecatedCodes is A StandardIdentifier according to CISAC's Territory Information System.
type TerritoryCodeTypeIncludingDeprecatedCodes string

// TextCodecType is Extensible Markup Language as defined by W3C.
type TextCodecType string

// TextMusicRelationshipType is Music only.
type TextMusicRelationshipType string

// TextType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type TextType string

// TextTypeATOM is A Extensible Hypertext Markup Language File (XHTML).
type TextTypeATOM string

// Theme is [missing definition]
type Theme string

// ThemeType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type ThemeType string

// TimecodeType is VITC Time Code.
type TimecodeType string

// TisTerritoryCode is World (Source: TIS Standard).
type TisTerritoryCode string

// TitleType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type TitleType string

// TransferCategory is The transfer Software used in the Transfer.
type TransferCategory string

// TransferType is A transfer of digital to digital audio.
type TransferType string

// UnitOfBitRate is MBit per Second.
type UnitOfBitRate string

// UnitOfConditionValue is A second.
type UnitOfConditionValue string

// UnitOfCuePoints is A second.
type UnitOfCuePoints string

// UnitOfDuration is A week.
type UnitOfDuration string

// UnitOfExtent is Pixel.
type UnitOfExtent string

// UnitOfFrameRate is Hertz, non-interlaced.
type UnitOfFrameRate string

// UnitOfFrequency is MHertz.
type UnitOfFrequency string

// UnitTypeForRevenueAllocation is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type UnitTypeForRevenueAllocation string

// UseType is Deprecation: This allowed value has been deprecated in 2017-11. DDEX advises that this value will be removed at a future date and therefore recommends against using it.
type UseType string

// UseTypeAR is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type UseTypeAR string

// UseTypeBWARM is Deprecation: This allowed value has been deprecated in 2017-11. DDEX advises that this value will be removed at a future date and therefore recommends against using it.
type UseTypeBWARM string

// UseTypeDSR is Deprecation: This allowed value has been deprecated in 2017-11. DDEX advises that this value will be removed at a future date and therefore recommends against using it.
type UseTypeDSR string

// UseTypeERN is Deprecation: This allowed value has been deprecated in 2017-11. DDEX advises that this value will be removed at a future date and therefore recommends against using it.
type UseTypeERN string

// UseTypeMWNL is To Use a Resource in a Release as an alert for an incoming phone call primarily on a MobileTelephone.
type UseTypeMWNL string

// UseTypeRDR is To Deliver a Resource over the Internet using streaming technology.
type UseTypeRDR string

// UserInterfaceType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type UserInterfaceType string

// UserInterfaceTypeERN is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type UserInterfaceTypeERN string

// VersionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type VersionType string

// VersionTypeMWDR is A Version specifically created for use at theme parks.
type VersionTypeMWDR string

// VideoCodecType is Windows Media Video as developed by Microsoft Corp.
type VideoCodecType string

// VideoDefinitionType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type VideoDefinitionType string

// VideoDefinitionTypeDSR is A VideoDefinitionType of a Video that is provided in a resolution not exceeding 704 x 480 pixels.
type VideoDefinitionTypeDSR string

// VideoType is A Resource that is accessible in the WWW.
type VideoType string

// VideoTypeDSR is An unedited audio-visual Recording that was recorded as part of a Session to produce, for instance, a ShortFormMusicalWorkVideo, but that has not been incorporated into the final version.
type VideoTypeDSR string

// VideoTypeERN43 is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type VideoTypeERN43 string

// VisualPerceptionType is A Type of a MusicalCreation that is visibly experienced by the characters in the containing Resource, Collection or Release (e.g. a character sings a song or actively listens to a song played on the radio).
type VisualPerceptionType string

// VocalRegister is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type VocalRegister string

// VocalType is A Type of a MusicalCreation that contains (human) voice.
type VocalType string

// WorkPart is A MusicalManifestation consisting of the music of a MusicalWork.
type WorkPart string

// WorkRelationshipType is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type WorkRelationshipType string

// WorkRelationshipTypeMWDR is A Type of an Entity which is defined by a sender of a DdexMessage in a manner acceptable to its recipient.
type WorkRelationshipTypeMWDR string

// WorkType is A LexicalWork that is considered of artistic merit.
type WorkType string
